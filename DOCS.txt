SLAYER v1.0 (23.05.1999)

TABLE OF CONTENTS
1. INTRODUCTION
2. INSTALLING
3. INTERFACE
	3.1 TEAM/THREAD LIST
	3.2 TEAM/THREAD CONTROL
4. SETTINGS
5. SLAYER AS A DESKBAR REPLICANT
6. SOME THINGS TO DO
7. LAST WORDS


1. INTRODUCTION
	Slayer is a program to manage Haiku teams and threads. It provides
	basic functionality to kill, suspend and resume threads as well as
	modifiying the priorities in simple and easy to use interface.
	Slayer is distributed under the terms of GPLv3.

2 INSTALLING/UNINSTALLING
	Use HaikuDepot to download, install and uninstall Slayer.

3. INTERFACE
3.1 TEAM/THREAD LIST
	When Slayer is launched a main window is displayed which has 
	all the teams listed in a hierarchical view. Teams can be expanded
	by clicking the arrow left to them and all the threads of that
	team are then unveiled. You can select teams and threads in
	standard Haiku fashion (multiple items can be selected in the list)
	and apply controlling operations to them (kill/suspend etc.).
	The list is divided into columns which show various information
	about the teams and threads. Each column, except name, can
	be hidden and shown as desired. The columns are:
	Name
		The name of the team / thread. The icon for the team is
		also displayed, if it has one.
	Id
		This is the team's / thread's identifier. Every team and every thread
		have a unique  integer identifier
	Priority
		Priority is only showed for threads, because teams don't have
		priorities. The larger the priority, the more that thread is
		given CPU time when many thread's compete for CPU time.
	State
		Also only for threads, state is what the thread is currently doing.
		They're pretty self-explanatory. The possible values are:
		Running, Ready, Suspended, Waiting, Receiving, Sleeping.
	Memory
		Used memory is only showed for teams, because all the threads
		in a team share the same memory. The memory shows how
		much RAM is used by the team. The amount of virtual memory
		assigned for the team is not shown. The memory column is
		not shown by default, because it uses more CPU time.
	CPU
		A graphical bar that shows how much CPU this thread/team is
		using. Of course only threads use CPU, but for every team Slayer
		counts together the CPU usages of it's threads.

3.2 TEAM/THREAD CONTROL
	Under the team list view is a Process Control and Process Priority box with
	control selections. Selecting anyone of them will apply that operation to
	all selected items. Please notice that only "kill" operation can be done
	to teams, all others can be done for threads only. But Slayer does the
	dirty job for you, if you have a team selected and you take some operation,
	Slayer will go through every thread in that team and apply the operation
	to it. So for example you can easily suspend all the threads of team by
	selecting the team and pressing suspend-button. Here are the controls
	explained:
	Kill
		Slays the selected teams and threads. Or at least tries slaying. It might
		not always work. For example no matter how I try I can't butcher the
		kernel_team. And believe me, I have tried!
	Suspend
		Suspend knocks the thread to unconscious state. The thread will
		not run if it is suspended. Not until someone wakes that thread
		(resumes).
	Resume
		Wakes a suspended thread. The thread starts running again if it
		was suspended.

	Under Process Control box is Process Priority, which changes the 
	priorities. Simply select the teams / threads which priorities you want
	to alter and either type in the text field the value (and press enter) or
	select the priority from the pulldown box.

	There is also Force Update button that causes the team view to be updated
	immediately. It's only useful if you keep very high refresh delay values
	(see 3. Settings).

4. SETTINGS
	There are a couple of things you can change about Slayer's behaviour:
	Workspace
		"Open window in current workspace" causes the main window of
		Slayer to open in the workspace Slayer was launched in. This is
		the default behaviour.
		"Open Window in all workspaces" causes the Slayer window to open
		in every workspace.
		"Open window in saved workspace(s)" makes Slayer open the window
		in the workspace you have saved (see "Save workspace" check box).
	Refresh delay
		Here you can define in seconds how long Slayer waits before updating
		the team view. The default is 0.2, that means Slayer updates the 
		view 5 times per second. If you put 0 Slayer won't pause at all and
		updates as fast as it can, but it's not quite practical value.
	Save window position on exit
		If this check box is on, the window position (window's size, it's
		location on screen and wether it's minimized or not) is saved when
		you quit. So for example if you want Slayer to start minimized
		just check this box, then minimize Slayer, then select from Deskbar
		Slayer and close all. Now Slayer is started minimized. And if you
		want to keep the settings just click "Save window position" off.
	Save Workspace
		If this check box is on, Slayer will save the workspace it is in when
		you quit the application. So if you always want Slayer to appear in
		some workspace, check this box, select from "Workspace" box 
		"Open window in saved workspace(s)" and quit while being in the
		Workspace you want Slayer to open in.
	Dock to Deskbar
		Pressing this button immediately assigns Slayer into Deskbar and
		quits the currently running Slayer. Check chapter 5 for more 
		information.

5. SLAYER AS A DESKBAR REPLICANT
	When Slayer is ran with --deskbar argument or you click "Dock to Deskbar"
	button from Settings, Slayer is turned into a deskbar replicant. A red
	icon with that familiar pentagram we all love should appear into the
	deskbar (if there is a problem loading Slayer's icon, a filled red circle
	is displayed instead). If you click the icon Slayer pops up. How and in
	which workspace depends on your settings. Probably most useful is
	using "Open in current workspace" when using Slayer as deskbar 
	replicant, which opens immediately Slayer in current workspace.
	Also with this option on, if you have Slayer open in another workspace
	and click the icon, Slayer moves into the workspace you're currently
	working in. 
	When you're using Slayer as a deskbar replicant, the changes in options
	etc. won't be saved and reserved across boots. If you want to change the
	options for good, launch Slayer as a normal application and do the changes
	you desire.
 
6. LAST WORDS
	I'd like to thank two people for making possible for me to
	come up with this program in reasonable time:
	Brian Tietz. His excellent ColumnListView is used to display the columns.
	Attila Mezei. Interface Elements is a must tool to create the interfaces.

	Also a big thank you to the people beta-testing version 1.0 and helping
	me making sure Slayer works OK: Pieter Panman, Richard Phipps,
	Marcus Overhagen (thanks for the archived menu hack!) and
	Brent Newhall.

	Finally, if you have any wishes for features, critique, or just want to
	shake my virtual hand feel free to send e-mail.

	Regards,
	Arto Jalkanen
	ajalkane@cc.hut.fi

